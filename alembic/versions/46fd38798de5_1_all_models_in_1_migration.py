"""all models in 1 migration

Revision ID: 46fd38798de5
Revises: 
Create Date: 2020-01-27 14:46:29.800170

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '46fd38798de5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_tokens',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('expiration_date', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_app_tokens'))
    )
    op.create_table('constraints',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('UniqueCode', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_constraints')),
    sa.UniqueConstraint('UniqueCode', name=op.f('constraints_id_key')),
    sa.UniqueConstraint('id', name=op.f('constraints_id_key'))
    )
    op.create_table('discussion_groups',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('image', postgresql.UUID(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_discussion_groups')),
    sa.UniqueConstraint('id', name=op.f('discussion_groups_id_key'))
    )
    op.create_table('permissions',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('permission', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_permissions')),
    sa.UniqueConstraint('id', name=op.f('permissions_id_key')),
    sa.UniqueConstraint('permission', name=op.f('permissions_id_key'))
    )
    op.create_table('persons',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('image', postgresql.UUID(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('cell_no', sa.String(), nullable=True),
    sa.Column('current_book_id', postgresql.UUID(), nullable=True),
    sa.Column('bio', sa.String(), nullable=True),
    sa.Column('is_legal', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_persons')),
    sa.UniqueConstraint('cell_no', name=op.f('persons_cell_id_key')),
    sa.UniqueConstraint('email', name=op.f('persons__email_id_key')),
    )
    op.create_table('unique_entity_connector',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('UniqueCode', sa.String(), nullable=False),
    sa.Column('entity_id', postgresql.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_unique_entity_connector')),
    sa.UniqueConstraint('UniqueCode', 'entity_id', name=op.f('unique_entity_connector_id_key')),
    sa.UniqueConstraint('id', name=op.f('unique_entity_connector_id_key'))
    )
    op.create_table('accounts',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('person_id', postgresql.UUID(), nullable=False),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('type', postgresql.ENUM('Main', 'Star', 'Discount', 'Postpaid', 'Prepaid', name='accounttypes'), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_tb_accounts_col_person_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_accounts')),
    sa.UniqueConstraint('id', name=op.f('accounts_id_key'))
    )
    op.create_table('books',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('edition', sa.String(), nullable=True),
    sa.Column('pub_year', sa.String(), nullable=True),
    sa.Column('type', sa.Enum('DVD', 'Audio', 'Hard_Copy', 'Pdf', 'Epub', 'Msd', name='booktypes'), nullable=True),
    sa.Column('genre', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('language', sa.String(), nullable=True),
    sa.Column('rate', sa.Float(), nullable=True),
    sa.Column('images', postgresql.ARRAY(postgresql.UUID()), nullable=True),
    sa.Column('files', postgresql.ARRAY(postgresql.UUID()), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('pages', sa.String(), nullable=True),
    sa.Column('duration', sa.String(), nullable=True),
    sa.Column('size', sa.String(), nullable=True),
    sa.Column('isben', sa.String(), nullable=True),
    sa.Column('from_editor', sa.String(), nullable=True),
    sa.Column('press', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['press'], ['persons.id'], name=op.f('fk_tb_books_col_press')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_books')),
    sa.UniqueConstraint('id', name=op.f('books_id_key'))
    )
    op.create_table('chat_messages',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('sender_id', postgresql.UUID(), nullable=False),
    sa.Column('receptor_id', postgresql.UUID(), nullable=True),
    sa.Column('group_id', postgresql.UUID(), nullable=True),
    sa.Column('body', sa.String(), nullable=True),
    sa.Column('parent_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['discussion_groups.id'], name=op.f('fk_tb_chat_messages_col_group_id')),
    sa.ForeignKeyConstraint(['receptor_id'], ['persons.id'], name=op.f('fk_tb_chat_messages_col_receptor_id')),
    sa.ForeignKeyConstraint(['sender_id'], ['persons.id'], name=op.f('fk_tb_chat_messages_col_sender_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_chat_messages')),
    sa.UniqueConstraint('id', name=op.f('chat_messages_id_key'))
    )
    op.create_table('discussion_members',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('group_id', postgresql.UUID(), nullable=False),
    sa.Column('person_id', postgresql.UUID(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['discussion_groups.id'], name=op.f('fk_tb_discussion_members_col_group_id')),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_tb_discussion_members_col_person_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_discussion_members')),
    sa.UniqueConstraint('group_id', 'person_id', name=op.f('discussion_members_id_key')),
    sa.UniqueConstraint('id', name=op.f('discussion_members_id_key'))
    )
    op.create_table('follows',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('follower_id', postgresql.UUID(), nullable=False),
    sa.Column('following_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['follower_id'], ['persons.id'], name=op.f('fk_tb_follows_col_follower_id')),
    sa.ForeignKeyConstraint(['following_id'], ['persons.id'], name=op.f('fk_tb_follows_col_following_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_follows')),
    sa.UniqueConstraint('id', name=op.f('follows_id_key'))
    )
    op.create_table('groups',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('person_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_tb_groups_col_person_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_groups')),
    sa.UniqueConstraint('id', name=op.f('groups_id_key')),
    sa.UniqueConstraint('title', name=op.f('groups_id_key'))
    )
    op.create_table('last_seens',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('sender_id', postgresql.UUID(), nullable=False),
    sa.Column('receptor_id', postgresql.UUID(), nullable=True),
    sa.Column('group_id', postgresql.UUID(), nullable=True),
    sa.Column('last_seen', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['discussion_groups.id'], name=op.f('fk_tb_last_seens_col_group_id')),
    sa.ForeignKeyConstraint(['receptor_id'], ['persons.id'], name=op.f('fk_tb_last_seens_col_receptor_id')),
    sa.ForeignKeyConstraint(['sender_id'], ['persons.id'], name=op.f('fk_tb_last_seens_col_sender_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_last_seens')),
    sa.UniqueConstraint('id', name=op.f('last_seens_id_key'))
    )
    op.create_table('orders',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('person_id', postgresql.UUID(), nullable=False),
    sa.Column('status', postgresql.ENUM('Created', 'Invoiced', 'Canceled', 'Postponed', name='orderstatus'), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('price_detail', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_tb_orders_col_person_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_orders')),
    sa.UniqueConstraint('id', name=op.f('orders_id_key'))
    )
    op.create_table('payments',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('person_id', postgresql.UUID(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('shopping_key', sa.String(), nullable=True),
    sa.Column('reference_code', sa.String(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('order_details', sa.JSON(), nullable=True),
    sa.Column('agent', sa.String(), nullable=True),
    sa.Column('used', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_tb_payments_col_person_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_payments')),
    sa.UniqueConstraint('id', name=op.f('payments_id_key'))
    )
    op.create_table('users',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('person_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_tb_users_col_person_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_users')),
    sa.UniqueConstraint('id', name=op.f('users_id_key')),
    sa.UniqueConstraint('username', name=op.f('users_id_key'))
    )
    op.create_table('book_contents',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('book_id', postgresql.UUID(), nullable=False),
    sa.Column('type', sa.Enum('Brief', 'Original', name='bookcontenttype'), nullable=False),
    sa.Column('content', sa.JSON(), nullable=False),
    sa.Column('book_press', postgresql.UUID(), nullable=False),
    sa.Column('celery_task_id', sa.String(), nullable=True),
    sa.Column('content_generated', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_tb_book_contents_col_book_id')),
    sa.ForeignKeyConstraint(['book_press'], ['persons.id'], name=op.f('fk_tb_book_contents_col_book_press')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_book_contents')),
    sa.UniqueConstraint('book_id', 'type', name=op.f('book_contents_id_key')),
    sa.UniqueConstraint('id', name=op.f('book_contents_id_key'))
    )
    op.create_table('book_roles',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('book_id', postgresql.UUID(), nullable=False),
    sa.Column('person_id', postgresql.UUID(), nullable=False),
    sa.Column('role', sa.Enum('Author', 'Writer', 'Translator', 'Press', 'Contributer', 'Designer', 'Narrator', name='roles'), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_tb_book_roles_col_book_id')),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_tb_book_roles_col_person_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_book_roles')),
    sa.UniqueConstraint('id', name=op.f('book_roles_id_key'))
    )

    op.create_table('collections',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('person_id', postgresql.UUID(), nullable=False),
    sa.Column('book_id', postgresql.UUID(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_tb_collections_col_book_id')),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_tb_collections_col_person_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_collections')),
    sa.UniqueConstraint('id', name=op.f('collections_id_key'))
    )
    op.create_table('comments',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('body', sa.String(), nullable=False),
    sa.Column('book_id', postgresql.UUID(), nullable=False),
    sa.Column('person_id', postgresql.UUID(), nullable=False),
    sa.Column('parent_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_tb_comments_col_book_id')),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_tb_comments_col_person_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_comments')),
    sa.UniqueConstraint('id', name=op.f('comments_id_key'))
    )
    op.create_table('device_codes',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_tb_device_codes_col_user_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_device_codes')),
    sa.UniqueConstraint('code', name=op.f('device_codes_id_key')),
    sa.UniqueConstraint('id', name=op.f('device_codes_id_key'))
    )
    op.create_table('group_permissions',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('permission_id', postgresql.UUID(), nullable=False),
    sa.Column('group_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_tb_group_permissions_col_group_id')),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name=op.f('fk_tb_group_permissions_col_permission_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_group_permissions')),
    sa.UniqueConstraint('group_id', 'permission_id', name=op.f('group_permissions_id_key')),
    sa.UniqueConstraint('id', name=op.f('group_permissions_id_key'))
    )
    op.create_table('group_users',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('group_id', postgresql.UUID(), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name=op.f('fk_tb_group_users_col_group_id')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_tb_group_users_col_user_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_group_users')),
    sa.UniqueConstraint('group_id', 'user_id', name=op.f('group_users_id_key')),
    sa.UniqueConstraint('id', name=op.f('group_users_id_key'))
    )
    op.create_table('library',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('book_id', postgresql.UUID(), nullable=False),
    sa.Column('person_id', postgresql.UUID(), nullable=False),
    sa.Column('status', sa.JSON(), nullable=True),
    sa.Column('progress', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_tb_library_col_book_id')),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_tb_library_col_person_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_library')),
    sa.UniqueConstraint('id', name=op.f('library_id_key'))
    )
    op.create_table('order_items',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('order_id', postgresql.UUID(), nullable=False),
    sa.Column('book_id', postgresql.UUID(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=True),
    sa.Column('discount', sa.Float(), nullable=True),
    sa.Column('net_price', sa.Float(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('price_detail', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_tb_order_items_col_book_id')),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_tb_order_items_col_order_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_order_items')),
    sa.UniqueConstraint('id', name=op.f('order_items_id_key'))
    )
    op.create_table('prices',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('book_id', postgresql.UUID(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_tb_prices_col_book_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_prices')),
    sa.UniqueConstraint('book_id', name=op.f('prices_id_key')),
    sa.UniqueConstraint('id', name=op.f('prices_id_key'))
    )
    op.create_table('rates',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('book_id', postgresql.UUID(), nullable=False),
    sa.Column('person_id', postgresql.UUID(), nullable=False),
    sa.Column('rate', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_tb_rates_col_book_id')),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_tb_rates_col_person_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_rates')),
    sa.UniqueConstraint('id', name=op.f('rates_id_key'))
    )
    op.create_table('transactions',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('account_id', postgresql.UUID(), nullable=False),
    sa.Column('credit', sa.Float(), nullable=True),
    sa.Column('debit', sa.Float(), nullable=True),
    sa.Column('payment_id', postgresql.UUID(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], name=op.f('fk_tb_transactions_col_account_id')),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], name=op.f('fk_tb_transactions_col_payment_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_transactions')),
    sa.UniqueConstraint('id', name=op.f('transactions_id_key'))
    )
    op.create_table('wish_lists',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('person_id', postgresql.UUID(), nullable=False),
    sa.Column('book_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_tb_wish_lists_col_book_id')),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_tb_wish_lists_col_person_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_wish_lists')),
    sa.UniqueConstraint('id', name=op.f('wish_lists_id_key'))
    )
    op.create_table('comment_actions',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('comment_id', postgresql.UUID(), nullable=False),
    sa.Column('person_id', postgresql.UUID(), nullable=False),
    sa.Column('like', sa.BOOLEAN(), nullable=True),
    sa.Column('report', postgresql.ENUM('Personal', 'Invalid_Content', 'General', name='reportcomment'), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], name=op.f('fk_tb_comment_actions_col_comment_id')),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_tb_comment_actions_col_person_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_comment_actions')),
    sa.UniqueConstraint('id', name=op.f('comment_actions_id_key'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('comment_actions')
    op.drop_table('wish_lists')
    op.drop_table('transactions')
    op.drop_table('rates')
    op.drop_table('prices')
    op.drop_table('order_items')
    op.drop_table('library')
    op.drop_table('group_users')
    op.drop_table('group_permissions')
    op.drop_table('device_codes')
    op.drop_table('comments')
    op.drop_table('collections')
    op.drop_table('checkout_press_accounts')
    op.drop_table('book_roles')
    op.drop_table('book_contents')
    op.drop_table('users')
    op.drop_table('payments')
    op.drop_table('orders')
    op.drop_table('last_seens')
    op.drop_table('groups')
    op.drop_table('follows')
    op.drop_table('discussion_members')
    op.drop_table('chat_messages')
    op.drop_table('books')
    op.drop_table('accounts')
    op.drop_table('unique_entity_connector')
    op.drop_table('persons')
    op.drop_table('permissions')
    op.drop_table('discussion_groups')
    op.drop_table('constraints')
    op.drop_table('app_tokens')
    # ### end Alembic commands ###
